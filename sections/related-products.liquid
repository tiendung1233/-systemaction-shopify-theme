{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'section-related-products.css' | asset_url | stylesheet_tag }}
{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top_mb}}px;
    padding-bottom: {{ section.settings.padding_bottom_mb}}px;
    color: rgb(var(--color-foreground))
  }


  @media screen and (min-width: 768px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class=" no-js-hidden">
  <product-recommendations
    data-column-mobile="2"
    data-column-desktop="{{ section.settings.columns_desktop }}"
    class="related-products  section-{{ section.id }}-padding isolate"
    data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit={{ section.settings.products_to_show }}"
  >
    {%- assign collection = recommendations -%}
   {%- if section.settings.collection != blank -%}
      {%- assign collection = section.settings.collection -%}
   {% endif %}
   
    {% if recommendations.performed and collection.products_count > 0 %}
    <div class="related-products__heading ">
      <h2 class="headings-desktop-h2 headings-mobile-h2">
        {{ section.settings.heading }}
      </h2>
      </div>
      <div class="product-slider swiper">
        <div class="swiper-wrapper">
        
          {% for recommendation in collection.products %}
            <div class="swiper-slide">
              {% render 'rocket-system-card-product',
                card_product: recommendation,
                show_secondary_image: section.settings.show_secondary_image,
                show_quick_add: section.settings.enable_quick_add,
                section_id: section.id
                product_slider: true
              %}
            </div>
          {% endfor %}
        </div>
        <div class="related-products-button-prev swiper-button-prev ">
          {% render 'icon-chervon-left' %}
            
        </div>
        <div class=" related-products-button-next swiper-button-next ">
          {% render 'icon-chervon-right' %}

        </div>
      </div>
    {% endif %}
  </product-recommendations>
</div>

{% comment %} {% for recommendation in collection.products %}
    <script>
        addEventListener('load', () => {
            var buttonInfo_{{ recommendation.id }} = {
                ButtonClassElement: '',
                ProductId: '{{ recommendation.id }}',
                ProductLink: '{{ recommendation.url | within: collection }}',
                ProductTitle: '{{ recommendation.title | escape }}',
                ButtonMode: 'icon_only',
                ProductPrice: '{{ recommendation.price | escape }}',
                ProductVariantId: '{% for variant in recommendation.variants %}{% if forloop.first %}{{ variant.id }}{% endif %}{% endfor %}',
                ProductImage: '',
                WishlistHash: ''          
            };
            document.InitializeAddToWishListButton(buttonInfo_{{ recommendation.id }})
        })
    </script>
{% endfor %} {% endcomment %}

<script>
    class ProductRecommendations extends HTMLElement {
        constructor() {
            super();
        }
      
        swymCallbackFn(swat) {
            // your API calls go here
            document.addEventListener("swym:recommend-product-loaded", function () {
                swat.initializeActionButtons('product-recommendations .product-slider');
            })
        }
        getProductRecommendations() {
          fetch(this.dataset.url)
            .then((response) => response.text())
            .then((text) => {
              const html = document.createElement("div");
              html.innerHTML = text;
              const recommendations = html.querySelector("product-recommendations");
      
              if (recommendations && recommendations.innerHTML.trim().length) {
                this.innerHTML = recommendations.innerHTML;
      
                new Swiper(this.querySelector('.product-slider'), {
                  slidesPerView: this.dataset.columnMobile,
                  spaceBetween: 0,
                  FreeMode: true,
                  navigation: {
                    nextEl: this.querySelector(".related-products-button-next"),
                    prevEl: this.querySelector(".related-products-button-prev"),
                  },
                  breakpoints: {
                    768: {
                      slidesPerView: this.dataset.columnDesktop - 1,
                      spaceBetween: 0
                    },
                    1200: {
                      slidesPerView: this.dataset.columnDesktop,
                      spaceBetween: 0
                    }
                  }
                })
                document.dispatchEvent(new
                  CustomEvent("swym:recommend-product-loaded"));
      
              }
      
              if (
                !this.querySelector("slideshow-component") &&
                this.classList.contains("complementary-products")
              ) {
                this.remove();
              }
      
              if (html.querySelector(".grid__item")) {
                this.classList.add("product-recommendations--loaded");
              }
              restockInit();
            })
            .catch((e) => {
              console.error(e);
            });
        }
        connectedCallback() {
          if (!window.SwymCallbacks) {
            window.SwymCallbacks = [];
          }
          window.SwymCallbacks.push(this.swymCallbackFn.bind(this));
      
          const handleIntersection = (entries, observer) => {
            if (!entries[0].isIntersecting) return;
            observer.unobserve(this);
      
            this.getProductRecommendations()
          };
      
          new IntersectionObserver(handleIntersection.bind(this), {
            rootMargin: "0px 0px 400px 0px",
          }).observe(this);
        }
      }
    customElements.define("product-recommendations", ProductRecommendations);
</script>

{% schema %}
{
  "name": "t:sections.related-products.name",
  "tag": "section",
  "class": "section section-related-product",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.related-products.settings.paragraph__1.content"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "You may also like",
      "label": "t:sections.related-products.settings.heading.label"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },

    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 10,
      "step": 1,
      "default": 4,
      "label": "t:sections.related-products.settings.products_to_show.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "t:sections.related-products.settings.columns_desktop.label"
    },

    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.related-products.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.related-products.settings.show_vendor.label"
    },

    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "header",
      "content": "Padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "Padding Top",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 40,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Padding Bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 40,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "padding_top_mb",
      "label": "Padding Top on Mobile",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 40,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "padding_bottom_mb",
      "label": "Padding Bottom on Mobile",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 40,
      "unit": "px"
    }
  ]
}
{% endschema %}
